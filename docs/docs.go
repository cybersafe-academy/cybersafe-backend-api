// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://cybersafe.academy.com/support/terms",
        "contact": {
            "name": "CyberSafe support team",
            "url": "http://cybersafe.academy.com/support/contact",
            "email": "support@cybersafe.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/license/mit/"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/finish-signup": {
            "post": {
                "description": "Checks the token on the request and fills up remaining user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Fills up remaining user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User verification token",
                        "name": "t",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Finish signup info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authentication.FinishSignupRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/auth/first-access": {
            "post": {
                "description": "Checks if the user was pre-registered and sends an e-mail to signup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Checks if the user was pre-registered",
                "parameters": [
                    {
                        "description": "First access verification info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authentication.FirstAccessRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/auth/forgot-password": {
            "post": {
                "description": "Receives the user email and if the email is valid, send a verification via email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Request new password via e-mail",
                "parameters": [
                    {
                        "description": "Reset password info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authentication.ForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticates an user and generates an access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User login information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authentication.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authentication.TokenContent"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/auth/logoff": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "description": "Logs off an user",
                "tags": [
                    "Authentication"
                ],
                "summary": "User logoff",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "description": "Refreshes the token for an authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login refresh",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authentication.TokenContent"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/auth/update-password": {
            "post": {
                "description": "Checks the token on the request and updates the password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Update password after email verification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User verification token",
                        "name": "t",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Update password info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authentication.UpdatePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/companies": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Company"
                ],
                "summary": "List companies with paginated response",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit of elements per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/pagination.PaginationData"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "$ref": "#/definitions/companies.ResponseContent"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Create a company",
                "parameters": [
                    {
                        "description": "Request payload for creating a new company",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/companies.RequestContent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/companies.ResponseContent"
                        }
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            }
        },
        "/companies/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Get company by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the company to be retrieved",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/companies.ResponseContent"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Update company by ID",
                "parameters": [
                    {
                        "description": "Request payload for updating company information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/companies.RequestContent"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID of company to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/companies.ResponseContent"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Company not found"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Delete a company by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the company to be deleted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            }
        },
        "/courses": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Course"
                ],
                "summary": "List all courses grouped by category",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpmodels.CourseByCategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Create a course",
                "parameters": [
                    {
                        "description": "Request payload for creating a new course",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpmodels.RequestContent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpmodels.ResponseContent"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            }
        },
        "/courses/categories": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Course"
                ],
                "summary": "List categories with paginated response",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit of elements per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/pagination.PaginationData"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "$ref": "#/definitions/httpmodels.CategoryResponse"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Create course category",
                "parameters": [
                    {
                        "description": "Request payload for creating a course category",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpmodels.CategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpmodels.CategoryResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            }
        },
        "/courses/categories/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Update category by ID",
                "parameters": [
                    {
                        "description": "Request payload for updating category information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpmodels.CategoryRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID of category to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpmodels.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Delete a category by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the category to be deleted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            }
        },
        "/courses/management": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Course"
                ],
                "summary": "List courses with paginated response",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit of elements per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/pagination.PaginationData"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "$ref": "#/definitions/httpmodels.ResponseContent"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            }
        },
        "/courses/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Get course by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the course to be retrieved",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpmodels.ResponseContent"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Update course by ID",
                "parameters": [
                    {
                        "description": "Request payload for updating course information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpmodels.RequestContent"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID of course to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpmodels.ResponseContent"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Course not found"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Delete a course by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the course to be deleted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            }
        },
        "/courses/{id}/enrollment": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Get Enrollment info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of course",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Course not found"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            }
        },
        "/courses/{id}/questions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Get the questions by the course ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of course",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/httpmodels.QuestionResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Course not found"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Correct Answer",
                "parameters": [
                    {
                        "description": "Request payload for creating a review",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpmodels.AddAnswerRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            }
        },
        "/courses/{id}/review": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Create review",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of course",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request payload for creating a review",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpmodels.ReviewRequestContent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httpmodels.ReviewResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            }
        },
        "/courses/{id}/reviews": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Get the reviews by the course ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of course",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Course not found"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "List users with paginated response",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit of elements per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/pagination.PaginationData"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "$ref": "#/definitions/users.ResponseContent"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "Request payload for creating a new user",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.RequestContent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.ResponseContent"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get authenticated user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.ResponseContent"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            }
        },
        "/users/personality-test": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "Store personality test result",
                "parameters": [
                    {
                        "description": "Request payload for personality test result",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.PersonalityTestRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            }
        },
        "/users/pre-signup": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "Pre signup an user",
                "parameters": [
                    {
                        "description": "Request payload for pre signup an user",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.PreSignupRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user to be retrieved",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.ResponseContent"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user by ID",
                "parameters": [
                    {
                        "description": "Request payload for updating user information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.RequestContent"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID of user to be updated",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.ResponseContent"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "Language": []
                    }
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the user to be deleted",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "default": {
                        "description": "Standard error example object",
                        "schema": {
                            "$ref": "#/definitions/components.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authentication.FinishSignupRequest": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "authentication.FirstAccessRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "authentication.ForgotPasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "authentication.LoginRequest": {
            "type": "object",
            "properties": {
                "cpf": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "authentication.TokenContent": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "expiresIn": {
                    "type": "number"
                },
                "tokenType": {
                    "type": "string"
                }
            }
        },
        "authentication.UpdatePasswordRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "companies.RequestContent": {
            "type": "object",
            "properties": {
                "cnpj": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "legalName": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "tradeName": {
                    "type": "string"
                },
                "websiteURL": {
                    "type": "string"
                }
            }
        },
        "companies.ResponseContent": {
            "type": "object",
            "properties": {
                "cnpj": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "legalName": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "tradeName": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "websiteURL": {
                    "type": "string"
                }
            }
        },
        "components.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "description": {
                    "type": "string",
                    "example": "Bad Request"
                },
                "error_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/components.ErrorDetail"
                    }
                }
            }
        },
        "components.ErrorDetail": {
            "type": "object",
            "properties": {
                "attribute": {
                    "type": "string",
                    "example": "field name with error or key for help messages"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "explanatory messages about the attribute error"
                    ]
                }
            }
        },
        "components.Response": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/components.Error"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "httpmodels.AddAnswerRequest": {
            "type": "object",
            "properties": {
                "answerID": {
                    "type": "string"
                },
                "questionID": {
                    "type": "string"
                }
            }
        },
        "httpmodels.AnswerRequest": {
            "type": "object",
            "properties": {
                "isCorrect": {
                    "type": "boolean"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "httpmodels.AnswerResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "httpmodels.CategoryRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "httpmodels.CategoryResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "httpmodels.CourseByCategoryResponse": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "httpmodels.CourseCategoryResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "httpmodels.QuestionRequest": {
            "type": "object",
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpmodels.AnswerRequest"
                    }
                },
                "wording": {
                    "type": "string"
                }
            }
        },
        "httpmodels.QuestionResponse": {
            "type": "object",
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpmodels.AnswerResponse"
                    }
                },
                "id": {
                    "type": "string"
                },
                "wording": {
                    "type": "string"
                }
            }
        },
        "httpmodels.RequestContent": {
            "type": "object",
            "properties": {
                "categoryID": {
                    "type": "string"
                },
                "contentInHours": {
                    "type": "number"
                },
                "contentURL": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpmodels.QuestionRequest"
                    }
                },
                "thumbnailURL": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "httpmodels.ResponseContent": {
            "type": "object",
            "properties": {
                "avgRating": {
                    "type": "number"
                },
                "category": {
                    "$ref": "#/definitions/httpmodels.CourseCategoryResponse"
                },
                "contentInHours": {
                    "type": "number"
                },
                "contentURL": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/httpmodels.QuestionResponse"
                    }
                },
                "thumbnailURL": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "httpmodels.ReviewRequestContent": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                }
            }
        },
        "httpmodels.ReviewResponse": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "courseID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "string"
                },
                "rating": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "pagination.PaginationData": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "users.PersonalityTestRequest": {
            "type": "object",
            "properties": {
                "mbtiType": {
                    "type": "string"
                }
            }
        },
        "users.PreSignupRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "users.RequestContent": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "users.ResponseContent": {
            "type": "object",
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Insert the token withou \"Bearer\" prefix.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "CyberSafe Academy API",
	Description:      "This REST API contains all services for the CyberSafe plataform.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
